// Place your key bindings in this file to overwrite the defaultsauto[]
[
  {
    "key": "cmd+k shift+cmd+7",
    "command": "-editor.foldAllBlockComments",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+k cmd+u",
    "command": "-editor.action.removeCommentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+k cmd+u",
    "command": "editor.action.transformToUppercase"
  },
  {
    "key": "cmd+k cmd+l",
    "command": "editor.action.transformToLowercase"
  },
  {
    "key": "cmd+k cmd+d",
    "command": "editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "f12",
    "command": "-editor.action.revealDefinition",
    "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
  },
  {
    "key": "cmd+k cmd+m",
    "command": "-workbench.extensions.action.showRecommendedKeymapExtensions"
  },
  {
    "key": "cmd+k cmd+m",
    "command": "workbench.action.editor.changeLanguageMode"
  },
  {
    "key": "cmd+k cmd+v",
    "command": "markdown-preview-enhanced.openPreview"
  },
  {
    "key": "cmd+k up",
    "command": "-workbench.action.moveActiveEditorGroupUp"
  },
  {
    "key": "cmd+k up",
    "command": "workbench.action.splitEditorUp"
  },
  {
    "key": "cmd+k down",
    "command": "-workbench.action.moveActiveEditorGroupDown"
  },
  {
    "key": "cmd+k down",
    "command": "workbench.action.splitEditorDown"
  },
  {
    "key": "cmd+k left",
    "command": "-workbench.action.moveActiveEditorGroupLeft"
  },
  {
    "key": "cmd+k left",
    "command": "workbench.action.splitEditorLeft"
  },
  {
    "key": "cmd+k right",
    "command": "-workbench.action.moveActiveEditorGroupRight"
  },
  {
    "key": "cmd+k right",
    "command": "workbench.action.splitEditorRight"
  },
  {
    "key": "cmd+k cmd+down",
    "command": "workbench.action.focusBelowGroup"
  },
  {
    "key": "cmd+k cmd+j",
    "command": "-editor.unfoldAll",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+k cmd+i",
    "command": "-editor.action.showHover",
    "when": "editorTextFocus"
  },
  {
    "key": "cmd+k cmd+i",
    "command": "-editor.debug.action.showDebugHover",
    "when": "editorTextFocus && inDebugMode"
  },
  {
    "key": "cmd+k cmd+y",
    "command": "toggle",
    "when": "editorTextFocus",
    "args": {
      "id": "colorize",
      "value": [
        { "colorize.colorized_colors": ["ARGB", "RGB", "HSL" ] },
        { "colorize.colorized_colors": [] }
      ]
    }
  },
  {
    "key": "cmd+k cmd+i",
    "command": "toggle",
    "when": "editorTextFocus",
    "args": {
      "id": "suggest",
      "value": [
        { "editor.parameterHints.enabled": true  },
        { "editor.parameterHints.enabled": false }
      ]
    }
  },
  {
    "key": "cmd+k cmd+o",
    "command": "toggle",
    "args": {
      "id": "minimap",
      "value": [
        { "editor.minimap.enabled": true  },
        { "editor.minimap.enabled": false }
      ]
    }
  },
  {
    "key": "cmd+k cmd+p",
    "command": "toggle",
    "args": {
      "id": "breadcrumbs",
      "value": [
        { "breadcrumbs.enabled": true },
        { "breadcrumbs.enabled": false }
      ]
    }
  },
  {
    "key": "shift+cmd+c",
    "command": "-workbench.action.terminal.openNativeConsole",
    "when": "!terminalFocus"
  },
  {
    "key": "alt+n",
    "command": "-C_Cpp.Navigate",
    "when": "editorTextFocus && editorLangId == 'cpp'"
  },
  {
    "key": "alt+n",
    "command": "-C_Cpp.Navigate",
    "when": "editorTextFocus && editorLangId == 'cpp'"
  },
  {
    "key": "alt+n",
    "command": "-C_Cpp.Navigate",
    "when": "editorTextFocus && editorLangId == 'c'"
  },
  {
    "key": "cmd+k cmd+[BracketLeft]",
    "command": "workbench.action.toggleActivityBarVisibility"
  },
  {
    "key": "ctrl+alt+d",
    "command": "editor.action.addSelectionToPreviousFindMatch"
  },
  {
    "key": "shift+enter",
    "command": "-workbench.action.terminal.findNext",
    "when": "terminalFindWidgetFocused"
  },
  {
    "key": "shift+alt+d",
    "command": "editor.action.addSelectionToPreviousFindMatch",
  },
  {
    "key": "cmd+k left",
    "command": "-workbench.action.splitEditor"
  },
  {
    "key": "shift+alt+u",
    "command": "-java.projectConfiguration.update",
    "when": "editorFocus"
  },
  {
    "key": "cmd+g",
    "command": "editor.action.moveSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "cmd+k cmd+d",
    "command": "-editor.action.moveSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "cmd+k cmd+2",
    "command": "editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "cmd+k [Period]",
    "command": "eslint.executeAutofix"
  }
]